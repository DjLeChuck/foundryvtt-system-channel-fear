<form class="{{cssClass}} {{actor.type}} flexcol" autocomplete="off">
  {{!-- Sheet Header --}}
  <header class="sheet-header">
    <img class="profile-img" src="{{actor.img}}" data-edit="img" title="{{actor.name}}" height="100" width="100" />
    <div class="header-fields">
      <h1 class="charname"><input name="name" type="text" value="{{actor.name}}" placeholder="Name" /></h1>
      {{!-- The grid classes are defined in scss/global/_grid.scss. To use,
      use both the "grid" and "grid-Ncol" class where "N" can be any number
      from 1 to 12 and will create that number of columns. --}}
      <div class="resources grid grid-3col">
        {{!-- "flex-group-center" is also defined in the _grid.scss file
        and it will add a small amount of padding, a border, and will
        center all of its child elements content and text. --}}
        <div class="resource flex-group-center">
          <label for="data.attributes.health.value" class="resource-label">__Santé</label>
          <div class="resource-content flexrow flex-center flex-between">
            <input type="text" id="data.attributes.health.value" name="data.attributes.health.value"
                   value="{{data.attributes.health.value}}" data-dtype="Number"
                   min="{{data.attributes.health.min}}" max="{{data.attributes.health.max}}" />
            <span> / </span>
            <input type="text" name="data.attributes.health.max" value="{{data.attributes.health.max}}"
                   data-dtype="Number" readonly />
          </div>
        </div>

        <div class="resource flex-group-center">
          <label for="data.attributes.resource.value" class="resource-label">__Ressource</label>
          <div class="resource-content flexrow flex-center flex-between">
            <input type="text" id="data.attributes.resource.value" name="data.attributes.resource.value"
                   value="{{data.attributes.resource.value}}" data-dtype="Number"
                   min="{{data.attributes.resource.min}}" max="{{data.attributes.resource.max}}" />
            <span> / </span>
            <input type="text" name="data.attributes.resource.max" value="{{data.attributes.resource.max}}"
                   data-dtype="Number" readonly />
          </div>
        </div>

        <div class="resource flex-group-center">
          <label for="data.attributes.evolution.value" class="resource-label">__Évolution</label>
          <div class="resource-content flexrow flex-center flex-between">
            <input type="text" id="data.attributes.evolution.value" name="data.attributes.evolution.value"
                   value="{{data.attributes.evolution.value}}" data-dtype="Number" />
          </div>
        </div>
      </div>
    </div>
  </header>

  {{!-- Sheet Tab Navigation --}}
  <nav class="sheet-tabs tabs" data-group="primary">
    {{!-- Default tab is specified in actor-sheet.mjs --}}
    <a class="item" data-tab="general">__General</a>
    <a class="item" data-tab="description">__Description</a>
    <a class="item" data-tab="items">__Items</a>
  </nav>

  {{!-- Sheet Body --}}
  <section class="sheet-body">
    {{!-- General Tab --}}
    <div class="tab features" data-group="primary" data-tab="general">
      <section class="grid grid-3col">
        <aside class="sidebar">
          {{!-- The grid classes are defined in scss/global/_grid.scss. To use,
          use both the "grid" and "grid-Ncol" class where "N" can be any number
          from 1 to 12 and will create that number of columns. --}}
          <div class="abilities flexcol">
            {{#each data.abilities as |ability key|}}
              <div class="ability flexrow flex-group-center">
                <label for="data.abilities.{{key}}.value" class="resource-label rollable flexlarge align-left"
                       data-roll="{{ability.value}}d6x6cs>3" data-label="{{ability.label}}">{{ability.label}}</label>
                <input type="text" id="data.abilities.{{key}}.value" name="data.abilities.{{key}}.value"
                       value="{{ability.value}}" data-dtype="Number" />
              </div>
            {{/each}}
          </div>
        </aside>

        {{!-- For the main specialties list, span the right two columns --}}
        <section class="main grid-span-2">
          {{!-- This is a Handlebars partial. They're stored in the `/parts` folder next to this sheet, and defined in module/helpers/templates.mjs --}}
          {{> "systems/channel-fear/templates/actor/parts/actor-specialties.hbs"}}
        </section>
      </section>
    </div>

    {{!-- Biography Tab --}}
    <div class="tab biography" data-group="primary" data-tab="description">
      {{!-- If you want TinyMCE editors to output inline rolls when rendered, you need to pass the actor's roll data to the rollData property. --}}
      <p>__BIO</p>
      {{editor content=data.biography target="data.biography" rollData=rollData button=true owner=owner editable=editable}}
      <p>__IDENTITY</p>
      {{editor content=data.info.identity target="data.info.identity" rollData=rollData button=true owner=owner editable=editable}}
      <p>__PROFILE</p>
      {{editor content=data.info.profile target="data.info.profile" rollData=rollData button=true owner=owner editable=editable}}
      <p>__KEYWORDS</p>
      {{editor content=data.info.keywords target="data.info.keywords" rollData=rollData button=true owner=owner editable=editable}}
      <p>__PROFDEF</p>
      {{editor content=data.info.profdef target="data.info.profdef" rollData=rollData button=true owner=owner editable=editable}}
    </div>

    {{!-- Owned Items Tab --}}
    <div class="tab items" data-group="primary" data-tab="items">
      {{> "systems/channel-fear/templates/actor/parts/actor-items.hbs"}}
    </div>
  </section>
</form>
